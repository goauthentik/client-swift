//
// EndpointDeviceRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Serializer for Endpoint authenticator devices */
public struct EndpointDeviceRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: 1, maxLength: 64, pattern: nil)
    public var pk: UUID?
    /** The human-readable name of this device. */
    public var name: String

    public init(pk: UUID? = nil, name: String) {
        self.pk = pk
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pk
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pk, forKey: .pk)
        try container.encode(name, forKey: .name)
    }
}

