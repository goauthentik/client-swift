//
// VersionHistory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** VersionHistory Serializer */
public struct VersionHistory: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int
    public var timestamp: Date
    public var version: String
    public var build: String

    public init(id: Int, timestamp: Date, version: String, build: String) {
        self.id = id
        self.timestamp = timestamp
        self.version = version
        self.build = build
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timestamp
        case version
        case build
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encode(version, forKey: .version)
        try container.encode(build, forKey: .build)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension VersionHistory: Identifiable {}
