//
// ShellChallenge.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** challenge type to render HTML as-is */
public struct ShellChallenge: Sendable, Codable, ParameterConvertible, Hashable {

    public var flowInfo: ContextualFlowInfo?
    public var component: String? = "xak-flow-shell"
    public var responseErrors: [String: [ErrorDetail]]?
    public var body: String

    public init(flowInfo: ContextualFlowInfo? = nil, component: String? = "xak-flow-shell", responseErrors: [String: [ErrorDetail]]? = nil, body: String) {
        self.flowInfo = flowInfo
        self.component = component
        self.responseErrors = responseErrors
        self.body = body
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case flowInfo = "flow_info"
        case component
        case responseErrors = "response_errors"
        case body
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(flowInfo, forKey: .flowInfo)
        try container.encodeIfPresent(component, forKey: .component)
        try container.encodeIfPresent(responseErrors, forKey: .responseErrors)
        try container.encode(body, forKey: .body)
    }
}

