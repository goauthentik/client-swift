//
// UserOAuthSourceConnectionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** User source connection */
public struct UserOAuthSourceConnectionRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let identifierRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var user: Int
    public var source: UUID
    public var identifier: String
    public var accessToken: String?
    public var expires: Date?

    public init(user: Int, source: UUID, identifier: String, accessToken: String? = nil, expires: Date? = nil) {
        self.user = user
        self.source = source
        self.identifier = identifier
        self.accessToken = accessToken
        self.expires = expires
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case user
        case source
        case identifier
        case accessToken = "access_token"
        case expires
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(user, forKey: .user)
        try container.encode(source, forKey: .source)
        try container.encode(identifier, forKey: .identifier)
        try container.encodeIfPresent(accessToken, forKey: .accessToken)
        try container.encodeIfPresent(expires, forKey: .expires)
    }
}

