//
// LDAPCheckAccess.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Base serializer class which doesn&#39;t implement create/update methods */
public struct LDAPCheckAccess: Sendable, Codable, ParameterConvertible, Hashable {

    public var hasSearchPermission: Bool?
    public var access: PolicyTestResult

    public init(hasSearchPermission: Bool? = nil, access: PolicyTestResult) {
        self.hasSearchPermission = hasSearchPermission
        self.access = access
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hasSearchPermission = "has_search_permission"
        case access
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(hasSearchPermission, forKey: .hasSearchPermission)
        try container.encode(access, forKey: .access)
    }
}

