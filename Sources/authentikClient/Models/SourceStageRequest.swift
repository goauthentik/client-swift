//
// SourceStageRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** SourceStage Serializer */
public struct SourceStageRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public static let resumeTimeoutRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var name: String
    public var flowSet: [FlowSetRequest]?
    public var source: UUID
    /** Amount of time a user can take to return from the source to continue the flow (Format: hours=-1;minutes=-2;seconds=-3) */
    public var resumeTimeout: String?

    public init(name: String, flowSet: [FlowSetRequest]? = nil, source: UUID, resumeTimeout: String? = nil) {
        self.name = name
        self.flowSet = flowSet
        self.source = source
        self.resumeTimeout = resumeTimeout
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case flowSet = "flow_set"
        case source
        case resumeTimeout = "resume_timeout"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(flowSet, forKey: .flowSet)
        try container.encode(source, forKey: .source)
        try container.encodeIfPresent(resumeTimeout, forKey: .resumeTimeout)
    }
}

