//
// ConnectionToken.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** ConnectionToken Serializer */
public struct ConnectionToken: Sendable, Codable, ParameterConvertible, Hashable {

    public var pk: UUID?
    public var provider: Int
    public var providerObj: RACProvider
    public var endpoint: UUID
    public var endpointObj: Endpoint
    public var user: PartialUser

    public init(pk: UUID? = nil, provider: Int, providerObj: RACProvider, endpoint: UUID, endpointObj: Endpoint, user: PartialUser) {
        self.pk = pk
        self.provider = provider
        self.providerObj = providerObj
        self.endpoint = endpoint
        self.endpointObj = endpointObj
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pk
        case provider
        case providerObj = "provider_obj"
        case endpoint
        case endpointObj = "endpoint_obj"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pk, forKey: .pk)
        try container.encode(provider, forKey: .provider)
        try container.encode(providerObj, forKey: .providerObj)
        try container.encode(endpoint, forKey: .endpoint)
        try container.encode(endpointObj, forKey: .endpointObj)
        try container.encode(user, forKey: .user)
    }
}

