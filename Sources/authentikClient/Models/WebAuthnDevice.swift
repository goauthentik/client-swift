//
// WebAuthnDevice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Serializer for WebAuthn authenticator devices */
public struct WebAuthnDevice: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 200, pattern: nil)
    public var pk: Int
    public var name: String
    public var createdOn: Date
    public var deviceType: WebAuthnDeviceType?
    public var aaguid: String
    public var user: GroupMember

    public init(pk: Int, name: String, createdOn: Date, deviceType: WebAuthnDeviceType?, aaguid: String, user: GroupMember) {
        self.pk = pk
        self.name = name
        self.createdOn = createdOn
        self.deviceType = deviceType
        self.aaguid = aaguid
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pk
        case name
        case createdOn = "created_on"
        case deviceType = "device_type"
        case aaguid
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pk, forKey: .pk)
        try container.encode(name, forKey: .name)
        try container.encode(createdOn, forKey: .createdOn)
        try container.encode(deviceType, forKey: .deviceType)
        try container.encode(aaguid, forKey: .aaguid)
        try container.encode(user, forKey: .user)
    }
}

