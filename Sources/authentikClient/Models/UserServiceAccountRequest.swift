//
// UserServiceAccountRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Payload to create a service account */
public struct UserServiceAccountRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var name: String
    public var createGroup: Bool? = false
    public var expiring: Bool? = true
    /** If not provided, valid for 360 days */
    public var expires: Date?

    public init(name: String, createGroup: Bool? = false, expiring: Bool? = true, expires: Date? = nil) {
        self.name = name
        self.createGroup = createGroup
        self.expiring = expiring
        self.expires = expires
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case createGroup = "create_group"
        case expiring
        case expires
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(createGroup, forKey: .createGroup)
        try container.encodeIfPresent(expiring, forKey: .expiring)
        try container.encodeIfPresent(expires, forKey: .expires)
    }
}

