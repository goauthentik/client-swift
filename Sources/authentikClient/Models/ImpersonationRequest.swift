//
// ImpersonationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ImpersonationRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let reasonRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var reason: String

    public init(reason: String) {
        self.reason = reason
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case reason
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(reason, forKey: .reason)
    }
}

