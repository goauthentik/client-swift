//
// PartialGroup.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Partial Group Serializer, does not include child relations. */
public struct PartialGroup: Sendable, Codable, ParameterConvertible, Hashable {

    public var pk: UUID
    /** Get a numerical, int32 ID for the group */
    public var numPk: Int
    public var name: String
    /** Users added to this group will be superusers. */
    public var isSuperuser: Bool?
    public var parent: UUID?
    public var parentName: String?
    public var attributes: [String: JSONValue]?

    public init(pk: UUID, numPk: Int, name: String, isSuperuser: Bool? = nil, parent: UUID? = nil, parentName: String?, attributes: [String: JSONValue]? = nil) {
        self.pk = pk
        self.numPk = numPk
        self.name = name
        self.isSuperuser = isSuperuser
        self.parent = parent
        self.parentName = parentName
        self.attributes = attributes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pk
        case numPk = "num_pk"
        case name
        case isSuperuser = "is_superuser"
        case parent
        case parentName = "parent_name"
        case attributes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pk, forKey: .pk)
        try container.encode(numPk, forKey: .numPk)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(isSuperuser, forKey: .isSuperuser)
        try container.encodeIfPresent(parent, forKey: .parent)
        try container.encode(parentName, forKey: .parentName)
        try container.encodeIfPresent(attributes, forKey: .attributes)
    }
}

