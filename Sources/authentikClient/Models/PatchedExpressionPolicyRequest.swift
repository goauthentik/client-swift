//
// PatchedExpressionPolicyRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Group Membership Policy Serializer */
public struct PatchedExpressionPolicyRequest: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public static let expressionRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var name: String?
    /** When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged. */
    public var executionLogging: Bool?
    public var expression: String?

    public init(name: String? = nil, executionLogging: Bool? = nil, expression: String? = nil) {
        self.name = name
        self.executionLogging = executionLogging
        self.expression = expression
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case executionLogging = "execution_logging"
        case expression
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(executionLogging, forKey: .executionLogging)
        try container.encodeIfPresent(expression, forKey: .expression)
    }
}

