//
// TypeCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Types of an object that can be created */
public struct TypeCreate: Sendable, Codable, ParameterConvertible, Hashable {

    public var name: String
    public var description: String
    public var component: String
    public var modelName: String
    public var iconUrl: String?
    public var requiresEnterprise: Bool? = false

    public init(name: String, description: String, component: String, modelName: String, iconUrl: String? = nil, requiresEnterprise: Bool? = false) {
        self.name = name
        self.description = description
        self.component = component
        self.modelName = modelName
        self.iconUrl = iconUrl
        self.requiresEnterprise = requiresEnterprise
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case description
        case component
        case modelName = "model_name"
        case iconUrl = "icon_url"
        case requiresEnterprise = "requires_enterprise"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(component, forKey: .component)
        try container.encode(modelName, forKey: .modelName)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encodeIfPresent(requiresEnterprise, forKey: .requiresEnterprise)
    }
}

