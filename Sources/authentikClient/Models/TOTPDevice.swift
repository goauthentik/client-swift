//
// TOTPDevice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Serializer for totp authenticator devices */
public struct TOTPDevice: Sendable, Codable, ParameterConvertible, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 64, pattern: nil)
    /** The human-readable name of this device. */
    public var name: String
    public var pk: Int
    public var user: PartialUser

    public init(name: String, pk: Int, user: PartialUser) {
        self.name = name
        self.pk = pk
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case pk
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(pk, forKey: .pk)
        try container.encode(user, forKey: .user)
    }
}

