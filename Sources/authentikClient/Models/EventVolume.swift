//
// EventVolume.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Count of events of action created on day */
public struct EventVolume: Sendable, Codable, ParameterConvertible, Hashable {

    public var action: EventActions
    public var time: Date
    public var count: Int

    public init(action: EventActions, time: Date, count: Int) {
        self.action = action
        self.time = time
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case action
        case time
        case count
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(action, forKey: .action)
        try container.encode(time, forKey: .time)
        try container.encode(count, forKey: .count)
    }
}

