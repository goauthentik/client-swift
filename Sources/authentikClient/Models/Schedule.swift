//
// Schedule.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Schedule: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: UUID
    /** Unique schedule identifier */
    public var identifier: String?
    public var uid: String
    /** Dramatiq actor to call */
    public var actorName: String
    public var relObjAppLabel: String
    public var relObjModel: String
    public var relObjId: String?
    /** When to schedule tasks */
    public var crontab: String
    /** Pause this schedule */
    public var paused: Bool?
    public var nextRun: Date
    public var description: String?
    public var lastTaskStatus: LastTaskStatusEnum?

    public init(id: UUID, identifier: String?, uid: String, actorName: String, relObjAppLabel: String, relObjModel: String, relObjId: String? = nil, crontab: String, paused: Bool? = nil, nextRun: Date, description: String?, lastTaskStatus: LastTaskStatusEnum?) {
        self.id = id
        self.identifier = identifier
        self.uid = uid
        self.actorName = actorName
        self.relObjAppLabel = relObjAppLabel
        self.relObjModel = relObjModel
        self.relObjId = relObjId
        self.crontab = crontab
        self.paused = paused
        self.nextRun = nextRun
        self.description = description
        self.lastTaskStatus = lastTaskStatus
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case identifier
        case uid
        case actorName = "actor_name"
        case relObjAppLabel = "rel_obj_app_label"
        case relObjModel = "rel_obj_model"
        case relObjId = "rel_obj_id"
        case crontab
        case paused
        case nextRun = "next_run"
        case description
        case lastTaskStatus = "last_task_status"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(identifier, forKey: .identifier)
        try container.encode(uid, forKey: .uid)
        try container.encode(actorName, forKey: .actorName)
        try container.encode(relObjAppLabel, forKey: .relObjAppLabel)
        try container.encode(relObjModel, forKey: .relObjModel)
        try container.encodeIfPresent(relObjId, forKey: .relObjId)
        try container.encode(crontab, forKey: .crontab)
        try container.encodeIfPresent(paused, forKey: .paused)
        try container.encode(nextRun, forKey: .nextRun)
        try container.encode(description, forKey: .description)
        try container.encode(lastTaskStatus, forKey: .lastTaskStatus)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Schedule: Identifiable {}
