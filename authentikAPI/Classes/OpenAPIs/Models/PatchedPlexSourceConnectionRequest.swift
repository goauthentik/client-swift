//
// PatchedPlexSourceConnectionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Plex Source connection Serializer */
public struct PatchedPlexSourceConnectionRequest: Codable, JSONEncodable, Hashable {

    public var identifier: String?
    public var plexToken: String?

    public init(identifier: String? = nil, plexToken: String? = nil) {
        self.identifier = identifier
        self.plexToken = plexToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case identifier
        case plexToken = "plex_token"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(identifier, forKey: .identifier)
        try container.encodeIfPresent(plexToken, forKey: .plexToken)
    }
}

