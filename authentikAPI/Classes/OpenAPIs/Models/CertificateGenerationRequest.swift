//
// CertificateGenerationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Certificate generation parameters */
public struct CertificateGenerationRequest: Codable, JSONEncodable, Hashable {

    public var commonName: String
    public var subjectAltName: String?
    public var validityDays: Int

    public init(commonName: String, subjectAltName: String? = nil, validityDays: Int) {
        self.commonName = commonName
        self.subjectAltName = subjectAltName
        self.validityDays = validityDays
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case commonName = "common_name"
        case subjectAltName = "subject_alt_name"
        case validityDays = "validity_days"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(commonName, forKey: .commonName)
        try container.encodeIfPresent(subjectAltName, forKey: .subjectAltName)
        try container.encode(validityDays, forKey: .validityDays)
    }
}

