//
// LoginSource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Serializer for Login buttons of sources */
public struct LoginSource: Codable, JSONEncodable, Hashable {

    public var name: String
    public var iconUrl: String?
    public var challenge: LoginChallengeTypes

    public init(name: String, iconUrl: String? = nil, challenge: LoginChallengeTypes) {
        self.name = name
        self.iconUrl = iconUrl
        self.challenge = challenge
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case iconUrl = "icon_url"
        case challenge
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encode(challenge, forKey: .challenge)
    }
}

