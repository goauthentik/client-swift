//
// FlowInspectorPlan.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Serializer for an active FlowPlan */
public struct FlowInspectorPlan: Codable, JSONEncodable, Hashable {

    public var currentStage: FlowStageBinding
    public var nextPlannedStage: FlowStageBinding
    /** Get the plan's context, sanitized */
    public var planContext: [String: AnyCodable]
    /** Get a unique session ID */
    public var sessionId: String

    public init(currentStage: FlowStageBinding, nextPlannedStage: FlowStageBinding, planContext: [String: AnyCodable], sessionId: String) {
        self.currentStage = currentStage
        self.nextPlannedStage = nextPlannedStage
        self.planContext = planContext
        self.sessionId = sessionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case currentStage = "current_stage"
        case nextPlannedStage = "next_planned_stage"
        case planContext = "plan_context"
        case sessionId = "session_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(currentStage, forKey: .currentStage)
        try container.encode(nextPlannedStage, forKey: .nextPlannedStage)
        try container.encode(planContext, forKey: .planContext)
        try container.encode(sessionId, forKey: .sessionId)
    }
}

