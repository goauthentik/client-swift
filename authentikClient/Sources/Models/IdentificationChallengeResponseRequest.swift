//
// IdentificationChallengeResponseRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Identification challenge 
public struct IdentificationChallengeResponseRequest: Codable {
    public var component: String? = "ak-stage-identification"
    public var uidField: String
    public var password: String?

    public init(component: String? = "ak-stage-identification", uidField: String, password: String? = nil) {
        self.component = component
        self.uidField = uidField
        self.password = password
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case component
        case uidField = "uid_field"
        case password
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        component = try container.decodeIfPresent(String.self, forKey: .component)
        uidField = try container.decode(String.self, forKey: .uidField)
        password = try container.decodeIfPresent(String.self, forKey: .password)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(component, forKey: .component)
        try container.encode(uidField, forKey: .uidField)
        try container.encodeIfPresent(password, forKey: .password)
    }
}
