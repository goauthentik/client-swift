//
// PatchedInvitationStageRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// InvitationStage Serializer 
public struct PatchedInvitationStageRequest: Codable {
    public var name: String?
    public var flowSet: [FlowSetRequest]?
    /// If this flag is set, this Stage will jump to the next Stage when no Invitation is given. By default this Stage will cancel the Flow when no invitation is given.
    public var continueFlowWithoutInvitation: Bool?

    public init(name: String? = nil, flowSet: [FlowSetRequest]? = nil, continueFlowWithoutInvitation: Bool? = nil) {
        self.name = name
        self.flowSet = flowSet
        self.continueFlowWithoutInvitation = continueFlowWithoutInvitation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case flowSet = "flow_set"
        case continueFlowWithoutInvitation = "continue_flow_without_invitation"
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        name = try container.decodeIfPresent(String.self, forKey: .name)
        flowSet = try container.decodeIfPresent([FlowSetRequest].self, forKey: .flowSet)
        continueFlowWithoutInvitation = try container.decodeIfPresent(Bool.self, forKey: .continueFlowWithoutInvitation)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(flowSet, forKey: .flowSet)
        try container.encodeIfPresent(continueFlowWithoutInvitation, forKey: .continueFlowWithoutInvitation)
    }
}
