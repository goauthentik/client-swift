//
// DeviceChallengeRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Single device challenge 
public struct DeviceChallengeRequest: Codable {
    public var deviceClass: String
    public var deviceUid: String
    public var challenge: [String: AnyCodable]

    public init(deviceClass: String, deviceUid: String, challenge: [String: AnyCodable]) {
        self.deviceClass = deviceClass
        self.deviceUid = deviceUid
        self.challenge = challenge
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case deviceClass = "device_class"
        case deviceUid = "device_uid"
        case challenge
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        deviceClass = try container.decode(String.self, forKey: .deviceClass)
        deviceUid = try container.decode(String.self, forKey: .deviceUid)
        challenge = try container.decode([String: AnyCodable].self, forKey: .challenge)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(deviceClass, forKey: .deviceClass)
        try container.encode(deviceUid, forKey: .deviceUid)
        try container.encode(challenge, forKey: .challenge)
    }
}
