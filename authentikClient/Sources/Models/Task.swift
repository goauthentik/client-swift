//
// Task.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Serialize TaskInfo and TaskResult 
public struct Task: Codable {
    public var taskName: String
    public var taskDescription: String
    public var taskFinishTimestamp: Date
    /// Get the duration a task took to run
    public var taskDuration: Int
    public var status: TaskStatusEnum
    public var messages: [AnyCodable]

    public init(taskName: String, taskDescription: String, taskFinishTimestamp: Date, taskDuration: Int, status: TaskStatusEnum, messages: [AnyCodable]) {
        self.taskName = taskName
        self.taskDescription = taskDescription
        self.taskFinishTimestamp = taskFinishTimestamp
        self.taskDuration = taskDuration
        self.status = status
        self.messages = messages
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case taskName = "task_name"
        case taskDescription = "task_description"
        case taskFinishTimestamp = "task_finish_timestamp"
        case taskDuration = "task_duration"
        case status
        case messages
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        taskName = try container.decode(String.self, forKey: .taskName)
        taskDescription = try container.decode(String.self, forKey: .taskDescription)
        taskFinishTimestamp = try container.decode(Date.self, forKey: .taskFinishTimestamp)
        taskDuration = try container.decode(Int.self, forKey: .taskDuration)
        status = try container.decode(TaskStatusEnum.self, forKey: .status)
        messages = try container.decode([AnyCodable].self, forKey: .messages)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(taskName, forKey: .taskName)
        try container.encode(taskDescription, forKey: .taskDescription)
        try container.encode(taskFinishTimestamp, forKey: .taskFinishTimestamp)
        try container.encode(taskDuration, forKey: .taskDuration)
        try container.encode(status, forKey: .status)
        try container.encode(messages, forKey: .messages)
    }
}
