//
// AppEnum.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// * &#x60;authentik.admin&#x60; - authentik Admin * &#x60;authentik.api&#x60; - authentik API * &#x60;authentik.crypto&#x60; - authentik Crypto * &#x60;authentik.events&#x60; - authentik Events * &#x60;authentik.flows&#x60; - authentik Flows * &#x60;authentik.outposts&#x60; - authentik Outpost * &#x60;authentik.policies.dummy&#x60; - authentik Policies.Dummy * &#x60;authentik.policies.event_matcher&#x60; - authentik Policies.Event Matcher * &#x60;authentik.policies.expiry&#x60; - authentik Policies.Expiry * &#x60;authentik.policies.expression&#x60; - authentik Policies.Expression * &#x60;authentik.policies.password&#x60; - authentik Policies.Password * &#x60;authentik.policies.reputation&#x60; - authentik Policies.Reputation * &#x60;authentik.policies&#x60; - authentik Policies * &#x60;authentik.providers.ldap&#x60; - authentik Providers.LDAP * &#x60;authentik.providers.oauth2&#x60; - authentik Providers.OAuth2 * &#x60;authentik.providers.proxy&#x60; - authentik Providers.Proxy * &#x60;authentik.providers.radius&#x60; - authentik Providers.Radius * &#x60;authentik.providers.saml&#x60; - authentik Providers.SAML * &#x60;authentik.providers.scim&#x60; - authentik Providers.SCIM * &#x60;authentik.rbac&#x60; - authentik RBAC * &#x60;authentik.recovery&#x60; - authentik Recovery * &#x60;authentik.sources.ldap&#x60; - authentik Sources.LDAP * &#x60;authentik.sources.oauth&#x60; - authentik Sources.OAuth * &#x60;authentik.sources.plex&#x60; - authentik Sources.Plex * &#x60;authentik.sources.saml&#x60; - authentik Sources.SAML * &#x60;authentik.stages.authenticator&#x60; - authentik Stages.Authenticator * &#x60;authentik.stages.authenticator_duo&#x60; - authentik Stages.Authenticator.Duo * &#x60;authentik.stages.authenticator_mobile&#x60; - authentik Stages.Authenticator.Mobile * &#x60;authentik.stages.authenticator_sms&#x60; - authentik Stages.Authenticator.SMS * &#x60;authentik.stages.authenticator_static&#x60; - authentik Stages.Authenticator.Static * &#x60;authentik.stages.authenticator_totp&#x60; - authentik Stages.Authenticator.TOTP * &#x60;authentik.stages.authenticator_validate&#x60; - authentik Stages.Authenticator.Validate * &#x60;authentik.stages.authenticator_webauthn&#x60; - authentik Stages.Authenticator.WebAuthn * &#x60;authentik.stages.captcha&#x60; - authentik Stages.Captcha * &#x60;authentik.stages.consent&#x60; - authentik Stages.Consent * &#x60;authentik.stages.deny&#x60; - authentik Stages.Deny * &#x60;authentik.stages.dummy&#x60; - authentik Stages.Dummy * &#x60;authentik.stages.email&#x60; - authentik Stages.Email * &#x60;authentik.stages.identification&#x60; - authentik Stages.Identification * &#x60;authentik.stages.invitation&#x60; - authentik Stages.User Invitation * &#x60;authentik.stages.password&#x60; - authentik Stages.Password * &#x60;authentik.stages.prompt&#x60; - authentik Stages.Prompt * &#x60;authentik.stages.user_delete&#x60; - authentik Stages.User Delete * &#x60;authentik.stages.user_login&#x60; - authentik Stages.User Login * &#x60;authentik.stages.user_logout&#x60; - authentik Stages.User Logout * &#x60;authentik.stages.user_write&#x60; - authentik Stages.User Write * &#x60;authentik.tenants&#x60; - authentik Tenants * &#x60;authentik.blueprints&#x60; - authentik Blueprints * &#x60;authentik.core&#x60; - authentik Core * &#x60;authentik.enterprise&#x60; - authentik Enterprise 
public enum AppEnum: String, Codable, CaseIterable {
    case admin = "authentik.admin"
    case api = "authentik.api"
    case crypto = "authentik.crypto"
    case events = "authentik.events"
    case flows = "authentik.flows"
    case outposts = "authentik.outposts"
    case policiesDummy = "authentik.policies.dummy"
    case policiesEventMatcher = "authentik.policies.event_matcher"
    case policiesExpiry = "authentik.policies.expiry"
    case policiesExpression = "authentik.policies.expression"
    case policiesPassword = "authentik.policies.password"
    case policiesReputation = "authentik.policies.reputation"
    case policies = "authentik.policies"
    case providersLdap = "authentik.providers.ldap"
    case providersOauth2 = "authentik.providers.oauth2"
    case providersProxy = "authentik.providers.proxy"
    case providersRadius = "authentik.providers.radius"
    case providersSaml = "authentik.providers.saml"
    case providersScim = "authentik.providers.scim"
    case rbac = "authentik.rbac"
    case recovery = "authentik.recovery"
    case sourcesLdap = "authentik.sources.ldap"
    case sourcesOauth = "authentik.sources.oauth"
    case sourcesPlex = "authentik.sources.plex"
    case sourcesSaml = "authentik.sources.saml"
    case stagesAuthenticator = "authentik.stages.authenticator"
    case stagesAuthenticatorDuo = "authentik.stages.authenticator_duo"
    case stagesAuthenticatorMobile = "authentik.stages.authenticator_mobile"
    case stagesAuthenticatorSms = "authentik.stages.authenticator_sms"
    case stagesAuthenticatorStatic = "authentik.stages.authenticator_static"
    case stagesAuthenticatorTotp = "authentik.stages.authenticator_totp"
    case stagesAuthenticatorValidate = "authentik.stages.authenticator_validate"
    case stagesAuthenticatorWebauthn = "authentik.stages.authenticator_webauthn"
    case stagesCaptcha = "authentik.stages.captcha"
    case stagesConsent = "authentik.stages.consent"
    case stagesDeny = "authentik.stages.deny"
    case stagesDummy = "authentik.stages.dummy"
    case stagesEmail = "authentik.stages.email"
    case stagesIdentification = "authentik.stages.identification"
    case stagesInvitation = "authentik.stages.invitation"
    case stagesPassword = "authentik.stages.password"
    case stagesPrompt = "authentik.stages.prompt"
    case stagesUserDelete = "authentik.stages.user_delete"
    case stagesUserLogin = "authentik.stages.user_login"
    case stagesUserLogout = "authentik.stages.user_logout"
    case stagesUserWrite = "authentik.stages.user_write"
    case tenants = "authentik.tenants"
    case blueprints = "authentik.blueprints"
    case core = "authentik.core"
    case enterprise = "authentik.enterprise"
    case unknownDefaultOpenApi = "unknown_default_open_api"
}
