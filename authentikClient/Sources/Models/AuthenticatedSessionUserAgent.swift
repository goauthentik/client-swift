//
// AuthenticatedSessionUserAgent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Get parsed user agent 
public struct AuthenticatedSessionUserAgent: Codable {
    public var device: AuthenticatedSessionUserAgentDevice
    public var os: AuthenticatedSessionUserAgentOs
    public var userAgent: AuthenticatedSessionUserAgentUserAgent
    public var string: String

    public init(device: AuthenticatedSessionUserAgentDevice, os: AuthenticatedSessionUserAgentOs, userAgent: AuthenticatedSessionUserAgentUserAgent, string: String) {
        self.device = device
        self.os = os
        self.userAgent = userAgent
        self.string = string
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case device
        case os
        case userAgent = "user_agent"
        case string
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        device = try container.decode(AuthenticatedSessionUserAgentDevice.self, forKey: .device)
        os = try container.decode(AuthenticatedSessionUserAgentOs.self, forKey: .os)
        userAgent = try container.decode(AuthenticatedSessionUserAgentUserAgent.self, forKey: .userAgent)
        string = try container.decode(String.self, forKey: .string)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(device, forKey: .device)
        try container.encode(os, forKey: .os)
        try container.encode(userAgent, forKey: .userAgent)
        try container.encode(string, forKey: .string)
    }
}
