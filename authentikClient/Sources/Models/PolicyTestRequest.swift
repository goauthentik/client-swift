//
// PolicyTestRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Test policy execution for a user with context 
public struct PolicyTestRequest: Codable {
    public var user: Int
    public var context: [String: Any]?

    public init(user: Int, context: [String: Any]? = nil) {
        self.user = user
        self.context = context
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case user
        case context
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        user = try container.decode(Int.self, forKey: .user)
        context = try container.decodeIfPresent([String: Any].self, forKey: .context)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(user, forKey: .user)
        if let context = context {
            try container.encodeIfPresent(try JSONSerialization.data(withJSONObject: context), forKey: .context)
        }
    }
}
