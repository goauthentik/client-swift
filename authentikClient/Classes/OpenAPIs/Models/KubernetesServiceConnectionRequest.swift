//
// KubernetesServiceConnectionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** KubernetesServiceConnection Serializer */
public struct KubernetesServiceConnectionRequest: Codable, JSONEncodable, Hashable {

    public var name: String
    /** If enabled, use the local connection. Required Docker socket/Kubernetes Integration */
    public var local: Bool?
    /** Paste your kubeconfig here. authentik will automatically use the currently selected context. */
    public var kubeconfig: AnyCodable?
    /** Verify SSL Certificates of the Kubernetes API endpoint */
    public var verifySsl: Bool?

    public init(name: String, local: Bool? = nil, kubeconfig: AnyCodable? = nil, verifySsl: Bool? = nil) {
        self.name = name
        self.local = local
        self.kubeconfig = kubeconfig
        self.verifySsl = verifySsl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case local
        case kubeconfig
        case verifySsl = "verify_ssl"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(local, forKey: .local)
        try container.encodeIfPresent(kubeconfig, forKey: .kubeconfig)
        try container.encodeIfPresent(verifySsl, forKey: .verifySsl)
    }
}

