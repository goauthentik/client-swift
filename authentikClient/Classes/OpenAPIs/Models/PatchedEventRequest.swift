//
// PatchedEventRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Event Serializer */
public struct PatchedEventRequest: Codable, JSONEncodable, Hashable {

    public var user: AnyCodable?
    public var action: EventActions?
    public var app: String?
    public var context: AnyCodable?
    public var clientIp: String?
    public var expires: Date?
    public var tenant: AnyCodable?

    public init(user: AnyCodable? = nil, action: EventActions? = nil, app: String? = nil, context: AnyCodable? = nil, clientIp: String? = nil, expires: Date? = nil, tenant: AnyCodable? = nil) {
        self.user = user
        self.action = action
        self.app = app
        self.context = context
        self.clientIp = clientIp
        self.expires = expires
        self.tenant = tenant
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case user
        case action
        case app
        case context
        case clientIp = "client_ip"
        case expires
        case tenant
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(action, forKey: .action)
        try container.encodeIfPresent(app, forKey: .app)
        try container.encodeIfPresent(context, forKey: .context)
        try container.encodeIfPresent(clientIp, forKey: .clientIp)
        try container.encodeIfPresent(expires, forKey: .expires)
        try container.encodeIfPresent(tenant, forKey: .tenant)
    }
}

